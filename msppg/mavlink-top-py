import struct

# See https://github.com/mavlink/c_library/blob/master/pixhawk/pixhawk.h
_MAVLINK_MESSAGE_CRCS = (50, 124, 137, 0, 237, 217, 104, 119, 0, 0, 0, 89, 0, 0, 0, 0, 0, 0, 0, 0, 
                        214, 159, 220, 168, 24, 23, 170, 144, 67, 115, 39, 246, 185, 104, 237, 244, 
                        222, 212, 9, 254, 230, 28, 28, 132, 221, 232, 11, 153, 41, 39, 214, 223, 141, 
                        33, 15, 3, 100, 24, 239, 238, 30, 200, 183, 0, 130, 0, 148, 21, 0, 52, 124, 
                        0, 0, 0, 20, 0, 152, 143, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 231, 183, 63, 
                        54, 0, 0, 0, 0, 0, 0, 0, 175, 102, 158, 208, 56, 0, 0, 0, 0, 0, 0, 0, 0, 
                        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
                        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
                        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
                        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
                        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
                        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 204, 49, 170, 44, 83, 46, 0)

class MAVLink_Parser(object):

    def __init__(self):
        
        self.state = 0

    def _update_checksum(self, byte):

        tmp = byte ^ (self.message_checksum & 0xFF)
        tmp ^= (tmp << 4) & 0xFF
        self.message_checksum = (self.message_checksum>>8) ^ (tmp<<8) ^ (tmp<<3) ^ (tmp>>4) 

    def parse(self, char):

        byte = ord(char)

        if self.state == 0:
            if byte == 0xFE:
                self.message_checksum = 0xFFFF
                self.state += 1
            
        elif self.state == 1:
            self._update_checksum(byte)
            self.message_length_expected = byte
            self.state += 1
            
        elif self.state == 2:
            self._update_checksum(byte)
            self.state += 1
            
        elif self.state == 3:
            self._update_checksum(byte)
            self.state += 1
            
        elif self.state == 4:
            self._update_checksum(byte)
            self.state += 1
            
        elif self.state == 5:
            self._update_checksum(byte)
            self.message_id = byte
            self.message_buffer = ''
            self.state += 1
            
        elif self.state == 6:
            self._update_checksum(byte)
            self.message_buffer += char
            if len(self.message_buffer) == self.message_length_expected:
                self.state += 1
                
        elif self.state == 7:
            self.chksum_actual = byte
            self.state += 1
            
        elif self.state == 8:
            self.state = 0
            self._update_checksum(_MAVLINK_MESSAGE_CRCS[self.message_id])
            self.chksum_actual |=  (byte << 8)
            if self.message_checksum ==  self.chksum_actual:
